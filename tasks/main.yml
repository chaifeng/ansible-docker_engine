- block:
    - name: Ensure docker dependencies
      apt:
        name: apt-transport-https,ca-certificates,curl,software-properties-common
        state: present

    - name: Ensure the Docker GPG keyring directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
    - name: Check if Docker GPG key exists
      stat:
        path: /etc/apt/keyrings/docker.asc
      register: docker_key

    - name: Add Docker GPG key if not present
      become: yes
      get_url:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: 0644
      when: not docker_key.stat.exists | default(false)

    - name: Ensure Docker CE Repository
      apt_repository:
        filename: 'docker'
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Ensure Docker CE is installed
      apt:
        name: docker-ce
        state: present
        update_cache: yes
        cache_valid_time: 86400  # Cache valid for 1 day
        force_apt_get: yes

    - name: Ensure specific Docker CE version installed
      apt:
        name: "docker-ce={{ docker_version }}~*"
        state: present
        update_cache: yes
        cache_valid_time: 86400  # Cache valid for 1 day
        force_apt_get: yes
      when: docker_version is defined

    - name: Adding users to docker group
      user:
        name: "{{ item }}"
        append: yes
        groups: docker
      loop: "{{ docker_users }}"

  tags:
    - docker_install

- block:
    - name: Ensure pip and setuptools
      apt:
        name: "python3-pip,python3-setuptools"
        state: present

    - name: Ensure docker modules
      pip:
        name: "{{ item.key }}"
        version: "{{ item.value }}"
        state: present
      loop: "{{ lookup('dict', docker_pip_packages | default({})) }}"

  tags:
    - docker_dependencies
    - docker_install

- block:
    - name: Add docker systemd overwrite dir
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
      when: ansible_service_mgr == "systemd"

    - name: Allow docker listen on TCP
      copy:
        content: |
          [Service]
          ExecStart=
          ExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock -H tcp://{{ docker_listen_addr }}
        dest: /etc/systemd/system/docker.service.d/override.conf
      notify:
        - Reload Systemd
        - Restart Docker
      when: ansible_service_mgr == "systemd" and docker_listen_addr is defined

    - name: Allow docker listen on TCP
      lineinfile:
        path: /etc/default/docker
        regexp: "^DOCKER_OPTS="
        line: "DOCKER_OPTS='-H unix:///var/run/docker.sock -H tcp://{{ docker_listen_addr }}'"
      notify: Restart Docker
      when: ansible_service_mgr != "systemd" and docker_listen_addr is defined
  tags: docker_tcp

- meta: flush_handlers
